---
import '@ui/tailwind.css';
import '@fontsource-variable/inter';
import interWoff2 from '@fontsource-variable/inter/files/inter-latin-wght-normal.woff2?url';
import { Header } from '@blog/header';
import { cn } from '@ui/lib/utils';
import { ViewTransitions } from 'astro:transitions';
import { NavMobile } from '@ui/components/header/nav-mobile';
import { Footer } from '@shared/ui';
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<link rel="preload" as="font" type="font/woff2" href={interWoff2} crossorigin/>
	</head>

	<body class="min-h-screen bg-background font-sans antialiased">
		<Header />
		<!-- <div class="flex-1 container"><slot /></div> -->
		<Footer/>
	</body>
</html>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
